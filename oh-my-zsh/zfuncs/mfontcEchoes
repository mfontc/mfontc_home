# vim:ft=zsh ts=4 sw=4 sts=4 noexpandtab

autoload colors
colors

for COLOR in RED GREEN YELLOW BLUE MAGENTA CYAN BLACK WHITE; do
	eval $COLOR='$fg_no_bold[${(L)COLOR}]'
	eval BOLD_$COLOR='$fg_bold[${(L)COLOR}]'
done
eval RESET='$reset_color'

echo_ () {
	print -P -- "${BOLD_GREEN}$*${RESET}"
}

echoE () {
	print -P -- "${BOLD_RED}$*${RESET}" > /dev/stderr
}

echoQ () {
	printf -- "${BOLD_YELLOW}$*${RESET}"
}

take_a_breath_and_continue () {
	for i in $(seq 1 3); do
		echoQ "."
		sleep 0.1
	done
	echo -e "\n\n\n"
}

take_a_breath_or_exit () {
	echoQ "[ Press a key to continue; 'q' breaks the execution ] "
	read -k1 opt
	case "$opt" in
		q|Q) exit 1 ;;
		*)   echo ;;
	esac
}

si_o_no () {
	echoQ "$* [S/n] "
	read -k1 opt
	case "$opt" in
		n|N) echo; return 1 ;;
		*)   echo; return 0 ;;
	esac
}

yes_or_no () {
	echoQ "$* [Y/n] "
	read -k1 opt
	case "$opt" in
		n|N) echo; return 1 ;;
		*)   echo; return 0 ;;
	esac
}

got_root () {
	if [[ "$USER" == "root" ]]; then
		return 0
	else
		echoE "You are not root, so..."
		return 1
	fi
}

got_utf8 () {
	case none"$LANG$LC_ALL$LC_CTYPE" in
		*UTF-8*) return 0 ;;
		*)       echoE "This script must be run in a UTF-8 locale" return 1 ;;
	esac
}

_date="$(      date +%Y-%m-%d )"
_date_time="$( date +%Y-%m-%d_%H:%M:%S )"
_datetime="$(  date +%Y%m%d-%H%M%S )"

### De lo siguiente, no estoy seguro

# Now you should redefine the "mfontcEchoes" function (which currently contains all the code from the file) to something that covers its actual functionality.
# After that, all the helper functions along with the core function will be defined and visible in global scope.
#mfontcEchoes () { printf '%s %s %s' "$(echo_)" "$(echoE)" "$(echoQ)" > /dev/null ; }

# Finally run the redefined function with the same arguments as the current run. If this is left out, the functionality implemented by the newly defined
# "mfontcEchoes" function is not executed upon its first call. So:
#mfontcEchoes "$@"
